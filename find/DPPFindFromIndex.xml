<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DPPFindFromIndex</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DPPFindFromIndex extends DPPFindFrom
{
    protected IndexId indexId;
    protected container parms;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setIndexId</Name>
				<Source><![CDATA[
    public void setIndexId(IndexId _indexId)
    {
        indexId = _indexId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParms</Name>
				<Source><![CDATA[
    public void setParms(container _parms)
    {
        parms = _parms;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public Common find()
    {
        Common ret;

        DictIndex dictIndex = new DictIndex(tableId,  indexId);

        Query    q = new Query();
        QueryRun qr;

        QueryBuildDataSource qds;

        if (!dictIndex)
        {
            throw error(strFmt("Index %1 does not exist.", indexId));
        }

        if (dictIndex.numberOfFields() != conLen(parms))
        {
            throw error(strFmt("Index %1 fields quantity and given arguments have uneven number of matches.",dictIndex.name()));
        }

        qds = q.addDataSource(tableId);

        for (int i = 1;i <= dictIndex.numberOfFields(); i++)
        {
            qds.addRange(dictIndex.field(i)).value(queryValue(conPeek(parms, i)));
            this.verbosing(strFmt("Field '%1' mapped to '%2' value.", fieldId2Name(tableId, dictIndex.field(i)), conPeek(parms, i)));
        }

        if (SysQuery::countTotal(new QueryRun(q)) > 1)
        {
            throw error("Attempted to fetch more than one record.");
        }

        qr = new QueryRun(q);
        qr.next();

        ret = qr.get(tableId);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>